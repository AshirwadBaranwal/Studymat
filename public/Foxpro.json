[
    {
    "Heading":"Introduction",
    "Subheading":"",
    "Html_Details":"<p> Foxpro is a package based language that gives facility to handle application programme through programming skill and also predefined option that solve user's problem.<br><br> Foxpro perform the task related to true DBMS(Data base management system). In many aspects , it is an industrial strength DB under certain circumstances, it can handle very large data tasks and it provides the tools to safeguard and inspect the data.Foxpro is approachable in database administration to use it. It works at a very basic and small scale level and also for very large and complex commercial applications.<br> Very broadly speaking, there are two parts to a DBMS like foxpro:- the database engine and the software user interface. The database engine is the part of the software that manipulates the database tables. Foxpro's engine can index, update, retrieve, information and do other tasks faster than any other DBMS. <br><br> The other part of foxpro is user interface means screen visibility like menu at the top, statusbar at the bottom and some thing called the command window in the middle. <br><br> Another position of the user interface is in the form of task specific elements which calls designer and builder tools.These are Database designer, Table designer, Report designer, view Designer, Form designer, Form builder etc.  <p>",
    "Details":"",
    "IMG":""
},
    {
    "Heading":"Features of Foxpro",
    "Subheading":"1. Foxpro as an interactive DB manager -",
    "Html_Details":"",
    "Details":"Foxpro is interactive, It means you can tell it to do things, and it will do them immediately. Foxpro gives direct response according to user request through command. ",
    "IMG":""
},{
    "Heading":"",
    "Subheading":"2. Foxpro as an programming language - ",
    "Html_Details":"",
    "Details":"It helps to understand your problem that a programming language underlies almost  evrything you can do in foxpro.",
    "IMG":""
},
{
    "Heading":"",
    "Subheading":"3. Foxpro as an application development environment - ",
    "Html_Details":"",
    "Details":"Foxpro is being used to create software application. There application are most often specialized programs like transport scheduling, Banking, medical record keeping, Inventory management etc.It means Foxpro programmming language is used for internal small scale program and also companies develop and sell commercial software application.",
    "IMG":""  
},
{
    "Heading":"History of Foxpro",
    "Subheading":"",
    "Html_Details":"Foxpro starting version is DBASE in DOS environment. In 1981 and 1982 a new product was introduced DBASE-II within four years popular product are introduced that is DBASE-III and DBASE-III+ . After that it is improved and version release foxbase then after foxpro. <br><br> Now window version of foxpro released that is visual foxpro. ",
    "Details":"" ,
    "IMG":""  
},
{
    "Heading":"How to start Foxpro -",
    "Subheading":"",
    "Html_Details":"Click on Foxpro icon from desktop or click on &emsp;  Start ---> Program ---> Visual studio 6.0 ---> Visual foxpro.<br> After that this type of window will display - ",
    "Details":"" ,
    "IMG":"Foxpro-1.png"  
},
{
    "Heading":"",
    "Subheading":"",
    "Html_Details":"We can write any command in command window box as per requirement after that press <kbd>Enter</kbd> then response will be display out side of window if syntax is right. Otherwise display error message in message box.",
    "Details":"Foxpro is database package at first create a table where define field name, Datatype, Width etc." ,
    "IMG":""  
},
{
    "Heading":"Datatypes in Foxpro -",
    "Subheading":"",
    "Html_Details":"<table><tr><th>Datatype</th><th>Description</th></tr><tr><td>Character&nbsp;:</td><td>Ordinary text , including all numbers and the letters of the alphabet.</td></tr><tr><td>Numeric&nbsp;:</td><td>This is for numbers only, including a decimal point and the sign.</td></tr><tr><td>Date&nbsp;:</td><td>This is only for date. Their range is from 01/01/100 to 12/31/9999.</td></tr><tr><td>DateTime&nbsp;:</td><td>This is used for date and time. The range of times supported is 00:00:00 AM to 11:59:59 PM. It is only for visual pro.</td></tr><tr><td>Logical&nbsp;:</td><td>A logical value, either true or false.</td></tr><tr><td>Currency&nbsp;:</td><td>This data type is designed to contain monetary amounts by automatically maintaining up to 4 decimal points.</td></tr></table>",
    "Details":"" ,
    "IMG":"" 
    
    
},
{
    "Heading":"Shortcut Keys in Foxpro",
    "Subheading":"",
    "Html_Details":"<kbd>Ctrl</kbd> + <kbd>O</kbd> = Open File <br><br><kbd>Ctrl</kbd> + <kbd>N</kbd> = New File <br><br><kbd>Ctrl</kbd> + <kbd>W</kbd> = Close File <br><br><kbd>Ctrl</kbd> + <kbd>S</kbd> = Save file <br><br><kbd>Ctrl</kbd> + <kbd>Q</kbd> = Quit without saving <br><br><kbd>Ctrl</kbd> + <kbd>P</kbd> = Print <br><br><kbd>Ctrl</kbd> + <kbd>D</kbd> = Do a program <br><br><kbd>Ctrl</kbd> + <kbd>F2</kbd> = Display Command Window <br><br><kbd>Ctrl</kbd> + <kbd>Z</kbd> = Undo edit <br><br><kbd>Ctrl</kbd> + <kbd>R</kbd> = Redo edit <br><br> <kbd>Ctrl</kbd> + <kbd>X</kbd>, <kbd>Ctrl</kbd> + <kbd>C</kbd>, <kbd>Ctrl</kbd> + <kbd>V</kbd>, <kbd>Ctrl</kbd> + <kbd>A</kbd>  is use generally like cut, copy, paste and select all respectively." ,
    "Details":"" ,
    "IMG":""   
},

{
    "Heading":"Now we start using command as per requirement in Foxpro -",
    "Subheading":"1. Create table",
    "Html_Details":"This command is used to create table.  " ,
    "Details":" syntax :- Create table <table name>" ,
    "IMG":"foxpro-create.png"   
},
{
    "Heading":"",
    "Subheading":"2. Append",
    "Html_Details":"This command is used to add new record in active database file. " ,
    "Details":"extension-(.dbf)" ,
    "IMG":"foxpro-append.png"   ,
    "detAfterImage":"Then save with Ctrl + W."
},
{
    "Heading":"",
    "Subheading":"3. List",
    "Html_Details":"This command is used to display list of records which is available in active database file. " ,
    "Details":"syntax :- List for <condition>" ,
    "IMG":""   ,
    "detAfterImage":" example:-  List for marks >= 60 and Roll <= 10"
},
{
    "Heading":"",
    "Subheading":"4. Browse",
    "Html_Details":"This command is used to display existing record of active database file in tabular format. " ,
    "Details":"Here we can also modify in available records." ,
    "IMG":"foxpro-browse.png"   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"5. Use",
    "Html_Details":"This command is used to open existing database file as per need.<br> use demo.dbf, Browse <kbd>Enter</kbd>",
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"6. Edit",
    "Html_Details":"This command is used to open existing record of active datbase file in vertical way and we an modify as per requirement.",
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"7. Modify Structure",
    "Html_Details":"This command is used to change any type of structure in a tip database file like - add a new field, remove existing field or change field name, data-type, size, etc <br> syntax :-<br> use demo.dbf <br> modify structure " ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"8. Display Structure",
    "Html_Details":"This command is used to display structure of active database file.<br>syntax :-<br>use demo.dbf <br> display structure" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
}, 
{
    "Heading":"",
    "Subheading":"9. Delete",
    "Html_Details":"This command is used to delete record in active database file but it only gives marking position of delete.<br>syntax :-<br>use demo.dbf <br>  delete for (condition)<br><br> Example:-<br> use Ashi <br>  delete for marks<40<br>  Browse<kbd>Enter</kbd>" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"10. Recall",
    "Html_Details":"This command is used to rcover deleted marking record as per requirement.<br>syntax :-<br>use demo.dbf <br> recall for (condition)<br> Browse<kbd>Enter</kbd><br><br>Example:-<br> use Ashi <br>  recall for marks<40<br> Browse<kbd>Enter</kbd>" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"11. Pack",
    "Html_Details":"This command is used to finally delete all marking records." ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"12. Zap",
    "Html_Details":"This command is used to delete all records of active database file permanently.<br>syntax :-<br>use demo.dbf <br>zap<kbd>Enter</kbd>" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"13. Goto",
    "Html_Details":"This command is used to record pointer in desired position.<br>syntax :-<br>Goto (record no.) <kbd>Enter</kbd><br><br>Example :-<br>Goto 4 <kbd>Enter</kbd><br>Display <kbd>Enter</kbd>" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"14. Display",
    "Html_Details":"This command is used to display record detail of current record position." ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"15. Display All",
    "Html_Details":"This command is used to display all records of active database file." ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"16. Locate for",
    "Html_Details":"This command is used to search particular record according to condition.<br> syntax:-<br> use sks <kbd>Enter</kbd><br>  Locate for marks >=70 <kbd>Enter</kbd><br>  Display <kbd>Enter</kbd> " ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"17. Sort",
    "Html_Details":"This command is used to arrange particular database file in ascending order, or descending order. After that, arrange record will be stored in another database file. <br> Syntax:- <br> use demo.dbf <kbd>Enter</kbd>  <br> sort on (field) to newdemo.dbf <kbd>Enter</kbd> <br> <br> Example :- <br> use sks <kbd>Enter</kbd> <br> sort on marks desc to sks1 <kbd>Enter</kbd> <br> use sks1 <kbd>Enter</kbd> <br> Browse <kbd>Enter</kbd>" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"18. Index",
    "Html_Details":"This command is used to arrange active database file in ascending order on particular field, but it depends on original database file. <br> There are two types of index - <br> <ol><li>Single index</li><li>Compound index</li></ol> In single index, only one key or one field be used and in compound index multiple field be used. <br> Syntax :- <br> use demo.dbf <br> Index on (field name) to index name <br><br> Example :- <br> use sks <kbd>Enter</kbd> <br> Index on name to sks <kbd>Enter</kbd> <br> Browse <kbd>Enter<kbd>" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"Difference between Index and Short - ",
    "Html_Details":"<table><tr><th>Index</th><th>Short</th></tr><tr><td>Index create index file whose extension is .idx</td><td>Sort create new database file after arrange any database file<td></tr><tr><td>Index is dependent on original database file for so being arranged data.</td><td>Sort not dependent on original database file for showing arranged data.</td></tr><tr><td>Index is faster for searching.</td><td>Sort is slower for searching</td></tr><tr><td>In the case of index multiple field used by the separation of plus(+).</td><td>In compound sort multiple field is used by the separation of (g)</td></tr></table>" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},
{
    "Heading":"",
    "Subheading":"19. Find",
    "Html_Details":"This command is used to search particular information from database file, but that must be an index file. <br> Syntax :- <br> use demo.dbf <br> Index on (field name) to (index name) <br> find field value<br><br> Example :- <br> use sks <kbd>Enter</kbd> <br> Index on name to sks <kbd>Enter</kbd> <br> find Ram <kbd>Enter</kbd> <br> Dsiplay <kbd>Enter</kbd>  " ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "
},{
    "Heading":"",
    "Subheading":"20. Seek",
    "Html_Details":"This command is used to search particular information related to database file, but the database file must be indexed, and value will be numeric and string both.<br> Numeric is used without inverted coma and string is used under inverted comma.<br> Syntax :- <br> use demo.dbf <br> Index on (field name) to (index name) <br> seek field name<br><br> Example :- <br> use sks <kbd>Enter</kbd> <br> Index on name to sks <kbd>Enter</kbd> <br> seek Ram <kbd>Enter</kbd> <br> Dsiplay <kbd>Enter</kbd>  " ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "  
},{
    "Heading":"",
    "Subheading":"21. Replace",
    "Html_Details":"This command is used to replace value of particular field related to recruitment by using condition.<br> Syntax :- <br> use sks <kbd>Enter</kbd><br>Replce all marks = 60 for Roll no. = 10 <br> Replace all remarks = (first) for marks >= 60" ,
    "Details":"" ,
    "IMG":"Replacetable.png"   ,
    "detAfterImage":" "  
},{
    "Heading":"",
    "Subheading":"22. Close",
    "Html_Details":"" ,
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"23. Close All",
    "Html_Details":"This command is used to close all database file. <br> Syntax : -<br> use sks <kbd>Enter</kbd> <br> List <kbd>Enter</kbd> <br> Close All <kbd>Enter</kbd>",
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "  
},{
    "Heading":"",
    "Subheading":"24. Dir",
    "Html_Details":"This command is used to display list of all file.<br> Syntax :- <br> dir * dbf <br> dir * idx <br> dir * prg.",
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "  
},{
    "Heading":"",
    "Subheading":"25. Erase",
    "Html_Details":"This command is used to delete particular file from foxpro.<br> Syntax :- <br> Erase demo.dbf <br> Earse sk.dbf",
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "  
},{
    "Heading":"",
    "Subheading":"26. Copy to",
    "Html_Details":"This command is used to copy database in new file with new name.<br> Syntax :- <br> use demo.dbf <br> copy to new.dbf <br><br>Example:- <br> use sks <kbd>Enter</kbd> <br>Copy to sks <kbd>Enter</kbd> ",
    "Details":"" ,
    "IMG":""   ,
    "detAfterImage":" "  
},{
    "Heading":"",
    "Subheading":"27. Clear",
    "Html_Details":"",
    "Details":"This command is used to clear the screen.",
    "IMG":""   ,
    "detAfterImage":" "  
},{
    "Heading":"Function ",
    "Subheading":"",
    "Html_Details":"Function returns a value on the basis of given parameter or arguments.<br> There are two types of functions : - <br> <ol><li>Pre-defined function</li><li>User-defined function</li></ol>",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
},{
    "Heading":"",
    "Subheading":"1. Pre-defined Function ",
    "Html_Details":"This function is created by application developer not by user. It is pre-defined provided by software, and user only use it as per requirement. So, it is called library function.",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"2. User-defined Function ",
    "Html_Details":"This function is created by user as per own logic and solve any type of problem through programming concept. Function is created one time and can be used multiple times as per requirement.",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"Different examples of pre-defined function: -",
    "Subheading":"1. Day( )",
    "Html_Details":"This function is used to get the day of given data as argument in numeric form.<br>Syntax :-<br> day(Date( ))<br><br>Example: -<br> ? day (Date ( ) )<br><br> Output :- 27 ; (It is today's Day.)",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"2. Date( )",
    "Html_Details":"This function is used to display current system date.<br> Syntax :-  ? Date ( ) <kbd>Enter</kbd> <br>Output -  07/27/20 <br><br>If we use..<br> Set Date British <kbd>Enter</kbd> <br>Set Century on <kbd>Enter</kbd> <br> ? Date ( ) <kbd>Enter</kbd> <br> Output :- 27/07/2020",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"3. Month ( )",
    "Html_Details":"This function is used to get month of given date.<br> Syntax :-  ? Month (Date)  <kbd>Enter</kbd> <br>Output :-  3  (It is current month.)",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"4. Year( )",
    "Html_Details":"This function is used to get the year of given date.<br> Syntax :-  ? Year ( Date( ))   <kbd>Enter</kbd> <br>Output :-  2024  (It is current year.)",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"5. Cmonth( ) ",
    "Html_Details":"This function is used to get the name of month from given date with first letter capital and rest is small.<br> Syntax :-  ? Cmonth ( Date( ))   <kbd>Enter</kbd> <br>Output :-  March  (It is current month name.)",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"6. DOW( ) ",
    "Html_Details":"This function is used to get ay of week in numeric form which is 1 to 7.<br> Syntax :-  ? DOW(Date)   <kbd>Enter</kbd> <br>Output :-  4  (Because today is Wednesday.)",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"7. CDOW( ) ",
    "Html_Details":"This function is used to get character day of week of given date.<br> Syntax :-  ? CDOW(Date)   <kbd>Enter</kbd> <br>Output :-  Wednesday",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"8. CTOD( )  ",
    "Html_Details":"This function is used to convert character to date.<br> Syntax :-  ? CTOD(Character) <kbd>Enter</kbd> <br>Example: - Suppose I want to know character day of week of particular date- <br> &ensp;&ensp; Set Date British <kbd>Enter</kbd><br> &ensp;&ensp; ? CDOW ( CTOD (“15/08/1947”) ) <kbd>Enter</kbd>",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"9. DTOC( )",
    "Html_Details":"This function is used to convert date to character.<br> Syntax :-  ? DTOC(Date) <kbd>Enter</kbd> <br>Example: - Suppose I want to know list of record their date of birth 28/07/2020 - <br> &ensp;&ensp; Set Date British <kbd>Enter</kbd><br> &ensp;&ensp; ? List for DTOC (DOB) = “25/07/2020” <kbd>Enter</kbd>",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"10. Val( ) ",
    "Html_Details":"This function is used to convert character to number.<br> Example :-  ? Val (“5”) + Val (“10”) <kbd>Enter</kbd><br> Output :- 15",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"11. Str( )  ",
    "Html_Details":"This function is used to convert number to character.<br> Example :-  ? Str (5) + Str (10) <kbd>Enter</kbd><br> Output :- 510",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"12. Left( )",  
    "Html_Details":"This function is used to get no. of character for given string from left side.<br>Syntax: - Left (“String” ,  No. of character)<br> Example :-  ? Left (“SANJEEV”, 3)  <kbd>Enter</kbd><br> Output :- SAN",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"13. Right( )",  
    "Html_Details":"This function is used to get no. of character for given string from right side.<br>Syntax: - Right (“string” , No. of character)<br> Example :-  ? Right (“SANJEEV”, 3)  <kbd>Enter</kbd><br> Output :- EEV",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"14. Substr( )",  
    "Html_Details":"This function is used to get no. of character for given string from desired position.<br>Syntax: - Substr (“string” ,  Position, No. of character)<br> Example :- ? Substr (“SANJEEV”, 3, 3)  <kbd>Enter</kbd><br> Output :- NJE",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"15. Len( )",  
    "Html_Details":"This function is used to count no. of character for given string.<br>Syntax: - Len (“ string ”)<br> Example :- ? Len (“SANJEEV”)  <kbd>Enter</kbd><br> Output :- 7",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
,{
    "Heading":"",
    "Subheading":"16. Ltrim( )",  
    "Html_Details":"This function is used to ignore spaces from left side if given string.<br>Syntax: - Ltrim (“string”) <br> Example :- ? Len ( Ltrim (“….. SANJEEV”) ) <kbd>Enter</kbd><br> Output :- 7",
    "Details":"",
    "IMG":""   ,
    "detAfterImage":" "  
}
  
]